name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate
        env:
          DB_URL: postgresql://postgres:postgres@localhost:5432/test_db

      - name: Run database migrations
        run: npx prisma migrate deploy
        env:
          DB_URL: postgresql://postgres:postgres@localhost:5432/test_db

      - name: Check code formatting
        run: npm run format:check || true

      - name: Run linting
        run: npm run lint || true

      - name: Run tests
        run: npm test || true
        env:
          DB_URL: postgresql://postgres:postgres@localhost:5432/test_db
          TOKEN_KEY: test-secret-key
